services:
  # organization: 
  #   build: 
  #     context: ./backend-services/organization
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-organization
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5001:3000"
  #   volumes:
  #     - ./backend-services/organization:/app

  # wiki: 
  #   build: 
  #     context: ./backend-services/wiki
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-wiki
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5004:3000"
  #   volumes:
  #     - ./backend-services/wiki:/app

  # team: 
  #   build: 
  #     context: ./backend-services/team
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-team
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5005:3000"
  #   volumes:
  #     - ./backend-services/team:/app
  
  # user: 
  #   build: 
  #     context: ./backend-services/users
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-users
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5003:3000"
  #   volumes:
  #     - ./backend-services/users:/app

  # gateway: 
  #   build: 
  #     context: ./gateway
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-gateway
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5007:3000"
  #   volumes:
  #     - ./gateway:/app
  
  # issues: 
  #   build: 
  #     context: ./backend-services/issues
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-issues
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5006:3000"
  #   volumes:
  #     - ./backend-services/issues:/app

  # data-access: 
  #   build: 
  #     context: ./backend-services/data-access
  #     dockerfile: Dockerfile
  #     target: dev
  #   image: neka-backend-data-access
  #   restart: always
  #   depends_on:
  #     - neka-db
  #   ports:
  #     - "5002:3000"
  #   environment:
  #     DB_HOST: neka-db
  #     DB_PORT: 3306
  #     DB_USERNAME: marius
  #     DB_PASSWORD: root
  #     DB_NAME: thot
  #   volumes:
  #     - ./backend-services/data-access:/app
  
  neka-db: 
    image: mysql:5.7.41
    container_name: neka-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: thot
      MYSQL_USER: marius
      MYSQL_PASSWORD: root
    ports:
      - "5000:3306" 
    volumes:
      - mysql-data:/var/lib/mysql
  
  # neka-otel-collector:
  #   image: otel/opentelemetry-collector:0.86.0
  #   command: [ "--config=/etc/otel-collector.yaml" ]
  #   volumes:
  #     - ./monitoring/otel-collector.yaml:/etc/otel-collector.yaml
  #   ports:
  #     - "4317"  # otlp grpc
  #     - "4318"  # otlp http

  # neka-tempo:
  #   image: grafana/tempo:latest
  #   command: [ "-config.file=/etc/tempo.yaml" ]
  #   volumes:
  #     - ./monitoring/tempo-config.yaml:/etc/tempo.yaml
  #     - tempo-data:/tmp/tempo
  #   ports:
  #     - "14268"  # jaeger ingest
  #     - "3200"   # tempo
  #     - "9411"   # zipkin

  tracing:
    image: jaegertracing/all-in-one:latest
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411

  neka-grafana:
    image: grafana/grafana-oss:latest
    user: "0:0"
    container_name: neka-grafana
    ports:
      - "4000:4000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana.ini:/etc/grafana/grafana.ini
      - /etc/letsencrypt:/etc/letsencrypt
    restart: unless-stopped
volumes:
  mysql-data:
  tempo-data:
  grafana-data: